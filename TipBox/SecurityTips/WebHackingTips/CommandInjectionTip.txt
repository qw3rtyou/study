***개념***
	인젝션(Injection)은 악의적인 데이터를 프로그램에 입력하여 
	이를 시스템 명령어, 코드, 데이터베이스 쿼리 등으로 실행되게 하는 기법

	명령어를 실행하는 함수에 이용자가 임의의 인자를 전달할 수 있을 때 발생
	시스템 함수를 사용하면 이용자의 입력을 소프트웨어의 인자로 전달할 수 있음


***linux 메타문자***

	``	명령어 치환
		``안에 들어있는 명령어를 실행한 결과로 치환

			$ echo `echo theori`
			theori

	$()	명령어 치환
		$()안에 들어있는 명령어를 실행한 결과로 치환 이 문자는 위와 다르게 중복 사용이 가능 (echo $(echo $(echo theori)))

			$ echo $(echo theori)
			theori

	&&	명령어 연속 실행
		한 줄에 여러 명령어를 사용하고 싶을 때 사용 앞 명령어에서 에러가 발생하지 않아야 뒷 명령어를 실행 (Logical And)

			$ echo hello && echo theori
			hello
			theori

	||	명령어 연속 실행
		한 줄에 여러 명령어를 사용하고 싶을 때 사용, 앞 명령어에서 에러가 발생해야 뒷 명령어를 실행 (Logical Or) 다시말해, 둘 중 하나만 실행시키고 싶을 때 사용

			$ cat / || echo theori
			cat: /: Is a directory
			theori

	;	명령어 구분자
		한 줄에 여러 명령어를 사용하고 싶을 때 사용 ;은 단순히 명령어를 구분하기 위해 사용하며, 앞 명령어의 에러 유무와 관계 없이 뒷 명령어를 실행

			$ echo hello ; echo theori
			hello
			theori

	|	파이프
		앞 명령어의 결과가 뒷 명령어의 입력으로 들어감
		특히 2번째 예시에서 사용하는 echo -e랑 파이프 조합은 
		pwnable이나 다른 여러분야에서도 많이 사용됨

			$ echo id | /bin/sh
			uid=1001(theori) gid=1001(theori) groups=1001(theori)

			echo -e "anydata: anydata\r\nget hello" | nc 127.0.0.1 6379