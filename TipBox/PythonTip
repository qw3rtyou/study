***소수점 관리하기***
print('%.nf' %number) number의 소수점 n+1번째 자릿수에서 반올림해서 소수점 n번째 자릿수까지 출력
ex) print('%.2f' %0.256)


***다차원 리스트 정렬***
list.sort()
list=list.sorted()

	1. 비교하는 키함수를 만들어서 정렬
	from functools import cmp_to_key

	def cmp(a,b):
		if a[0] == b[0]:
			return a[1] < b[1]
		else:
			return a[0] < b[0]

	list=[[1,2][2,3][3,5][1,4]]

	list=sorted(list,key=cmp_to_key(cmp))

	2. lambda함수 사용
	list=sorted(list,key=lambda x: (x[0], x[1]))
	list=sorted(list,key=lambda x: (x[0], -x[1]))	이러면 내림차순인데 -연산자가 안된는
	자료형이면 불가능


***defualtdict***
주어지는 키가 없다면 오류를 일으키는 기존 딕셔너리와는 달리 자동으로 생성하고
지정한 비어있는 자료형을 바로 할당한다.

from collections import defaultdict
graph = defaultdict(list)
for i in range(n):
    s, e = map(int, input().split())
    graph[s].append(e)
    graph[e].append(s)
	

***변수print***
형식지정자를 이용한 print
print("현재 위치는 %d 입니다."%(cur))


***deque***


***map(),split()***