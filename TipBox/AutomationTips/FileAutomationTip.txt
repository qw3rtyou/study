***파일 다루기***
	os 모듈
		운영체제에서 제공되는 여러기능을 파이썬에서 수행하게 해줌

			import os
			
			##운영체제 이름 출력 윈도우는 nt
			print(os.name)

		파일 용량 접근
			size=os.path.getsize("os_print_os_name.py")

			#1000byte=1kb
			#1000kb=1mb
			def byte_to_mb(size):
			    return size//1000000

			print("용량: {}MB".format(byte_to_mb	mb(size)))

		파일 속성 접근
			import datetime

			path = 'os_print_os_name.py'

			# 타임스탬프 형식의 생성 시간
			# 예시: 1594616754.1851065
			creation_time = os.path.getctime(path)
			modify_time = os.path.getmtime(path)
			access_time = os.path.getatime(path)

			# datetime 모듈을 사용해서 보기 좋게 변경하기
			# 예시: 2020-06-19 14:26:52.981000
			format_creation_time = datetime.datetime.fromtimestamp(creation_time)
			format_modify_time = datetime.datetime.fromtimestamp(modify_time)
			format_access_time = datetime.datetime.fromtimestamp(access_time)

			# 문자열과 함께 출력하고 싶다면 format을 사용
			print("{} 생성 시각: {}".format(path,format_creation_time))
			print("{} 수정 시각: {}".format(path,format_modify_time))
			print("{} 참조 시각: {}".format(path,format_access_time))

		파일 내용 접근
			file=open("os_check_file_5mb.py",encoding='UTF-8')
			#파이썬은 기본적으로 인코딩을 ANSI로 함
			#파일을 ANSI로 인코딩해주거나
			#위에처럼 인코딩을 따로 지정해줘야함

			print(file.readline())
			print(file.readline())

			file.seek(0)    #파일 커서 처음으로 옮기기
			print(file.read())

			file.seek(0)    #파일 커서 처음으로 옮기기
			print(file.readlines())

			file.close()

		파일 생성, 삭제, 이름변경
			with open("data/generatedfile1",'w',encoding='UTF-8') as file:
			    pass

			with open("data/generatedfile2",'w',encoding='UTF-8') as file:
			    pass

			with open("data/generatedfile3",'w',encoding='UTF-8') as file:
			    pass

			import os

			os.rename("data/generatedfile1","data/dummyfile")
			os.remove("data/generatedfile2")

		파일 내용 편집
			with open("data/text1.txt",'a',encoding='UTF-8') as file:
			    file.write("fku")

		r,w,a 모드 동시에 사용
			위에 방법대로 rwa모드를 동시에 사용하려면 파일을 다른 파일 디스크립터로
			여러번 열어야 한다.
			r+,w+,a+ 등으로 여러 모드를 동시에 사용 가능하다.

				with open("data/text1.txt",'w+',encoding='UTF-8') as file:
				    file.write("fku")
				    file.read()

		r,w,a,+모드 차이 정리
			https://bakey-api.codeit.kr/api/files/resource?root=static&seqId=4204&directory=여섯가지open모드.png&name=%E1%84%8B%E1%85%A7%E1%84%89%E1%85%A5%E1%86%BA%E1%84%80%E1%85%A1%E1%84%8C%E1%85%B5open%E1%84%86%E1%85%A9%E1%84%83%E1%85%B3.png

		파일 확장자 분리
			import os

			file = 'codeit.report.pdf'
			filename, extension = os.path.splitext(file)

	shutil 모듈
		파일 복제

			import shutil

			with open("data/shutil_ex.txt",'w') as file:
			    file.write("hello shutil!\nshutil is shell+utill")

			shutil.copy("data/shutil_ex.txt","data/shutil_ex2.txt")


	zipfile 모듈
		파일 합치기
			import zipfile

			with zipfile.ZipFile("data/code_comp.zip",'w') as zip:
			    zip.write("os_check_file_5mb.py")
			    zip.write("shutil_file_duplicate.py")

		파일 압축
			import zipfile

			#compression option makes zipfile compress
			with zipfile.ZipFile("data/code_comp.zip",'w',compression=zipfile.ZIP_DEFLATED) as zip:
			    zip.write("os_check_file_5mb.py")
			    zip.write("shutil_file_duplicate.py")


		파일 압축풀기
			#decompress zipfile
			with zipfile.ZipFile("data/code_comp.zip",'r') as zip:
			    zip.extractall("data/decompressed_code")



