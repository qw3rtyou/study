# import os
# import binascii
# import struct

# misc = open("target.png","rb").read()
# print(misc[12:16])
# print( misc[16:29])
# for i in range(2000):
#   for j in range(2000):
#     data = misc[12:16] + struct.pack('>i',i) + struct.pack('>i',j)+ misc[24:29]
#     crc32 = binascii.crc32(data) & 0xffffffff
#     if crc32 == 0x00D6FEE5: # CRC32
#       print(struct.pack('>i',i)+ struct.pack('>i',j))

import os
import binascii
import struct

misc = open("target.png","rb").read()

for i in range(2000):
    for j in range(2000):
        data = misc[12:16] + struct.pack('>i',i) + struct.pack('>i',j)+ misc[24:29]
        crc32 = binascii.crc32(data) & 0xffffffff
        if crc32 == 0xD6FEE5F4: # CRC32
            print(struct.pack('>i',i)+ struct.pack('>i',j))


# from zlib import crc32

# data = open("target.png",'rb').read()
# index = 12

# ihdr = bytearray(data[index:index+17])
# width_index = 7
# height_index = 11

# for x in range(1,2000):
#   height = bytearray(x.to_bytes(2,'big'))
#   for y in range(1,2000):
#     width = bytearray(y.to_bytes(2,'big'))
#     for i in range(len(height)):
#       ihdr[height_index - i] = height[-i -1]
#     for i in range(len(width)):
#       ihdr[width_index - i] = width[-i -1]
#     if hex(crc32(ihdr)) == '0xD6FEE5F4':
#       print("width: {} height: {}".format(width.hex(),height.hex()))
#   for i in range(len(width)):
#       ihdr[width_index - i] = bytearray(b'\x00')[0]