data = [
    0xF8,
    0xE0,
    0xE6,
    0x9E,
    0x7F,
    0x32,
    0x68,
    0x31,
    0x05,
    0xDC,
    0xA1,
    0xAA,
    0xAA,
    0x09,
    0xB3,
    0xD8,
    0x41,
    0xF0,
    0x36,
    0x8C,
    0xCE,
    0xC7,
    0xAC,
    0x66,
    0x91,
    0x4C,
    0x32,
    0xFF,
    0x05,
    0xE0,
    0xD9,
    0x91,
]
deadbeef = [0xDE, 0xAD, 0xBE, 0xEF]
efbeadde = [0xEF, 0xBE, 0xAD, 0xDE]
odd_byte = [0x11, 0x33, 0x55, 0x77, 0xBB, 0xDD]


def xor_enc(key):
    for i in range(32):
        input[i] = key[i % len(key)] ^ input[i]


def inc_enc(key):
    for i in range(32):
        input[i] = input[i] + key


def decs_enc(key):
    for i in range(32):
        input[i] = input[i] - key


# input = input()

input = data

xor_enc(odd_byte)
decs_enc(-13)
inc_enc(77)
xor_enc(efbeadde)
inc_enc(90)
decs_enc(31)
xor_enc(deadbeef)

for byte in [hex(byte) for byte in input]:
    print(byte[2:], end="")
